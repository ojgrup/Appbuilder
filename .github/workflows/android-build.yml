# .github/workflows/android-build.yml

name: Build Android APK (Otomatis API)

on:
  repository_dispatch:
    types: [start-apk-build] 

# Ambil data dari payload yang dikirim oleh Server
env:
  APP_ID: ${{ github.event.client_payload.app_id || 'defaultapp' }}
  APP_NAME: ${{ github.event.client_payload.app_name || 'Web Default' }}
  MAIN_URL: ${{ github.event.client_payload.main_url || 'https://ojgrup.com' }}
  ICON_URL: ${{ github.event.client_payload.icon_url || 'https://ojgrup.com/icon.png' }}
  PACKAGE_SUFFIX: ${{ github.event.client_payload.package_suffix || 'code' }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
          
      # Langkah 1: Buat webapk.conf dari Payload
      - name: Create webapk.conf from Payload
        run: |
          echo "id = ${{ env.APP_ID }}" > webapk.conf
          echo "name = ${{ env.APP_NAME }}" >> webapk.conf
          echo "mainURL = ${{ env.MAIN_URL }}" >> webapk.conf
          echo "icon = ${{ env.ICON_URL }}" >> webapk.conf
          echo "packageSuffix = ${{ env.PACKAGE_SUFFIX }}" >> webapk.conf
          echo "allowSubdomains = true" >> webapk.conf
          echo "requireDoubleBackToExit = true" >> webapk.conf
          echo "enableExternalLinks = true" >> webapk.conf
          echo "openExternalLinksInBrowser = true" >> webapk.conf
          echo "confirmOpenInBrowser = true" >> webapk.conf
          echo "allowOpenMobileApp = false" >> webapk.conf
          
      - name: Grant execute permission for make.sh
        run: chmod +x make.sh
        
      # Langkah 2: Build Release APK
      - name: Build Release APK
        run: ./make.sh build webapk.conf 

      # --- Langkah Otomasi Download ---

      # Langkah 3: Buat Release GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_ID }}-v1.0.${{ github.run_number }}
          release_name: APK Build for ${{ env.APP_NAME }}
          draft: false
          prerelease: false

      # Langkah 4: Upload APK ke Release
      - name: Upload Release Asset (APK)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.APP_ID }}.apk 
          asset_name: ${{ env.APP_ID }}-${{ env.PACKAGE_SUFFIX }}.apk
          asset_content_type: application/vnd.android.package-archive
